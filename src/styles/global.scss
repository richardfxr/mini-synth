// Partial SCSS file containing global CSS styles

// === USE ====================================
@use 'variables' as *;

/* ============================================
GLOBAL
============================================ */

// temporary Google Fonts import
@import url('https://fonts.googleapis.com/css2?family=Inter+Tight:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto+Mono:wght@300;400;500;600;700&display=swap');

* {
    font-family: 'Inter Tight', sans-serif;
    font-size: 1rem;
    font-weight: 500;
    line-height: 1em;
}

:global {
    html, body {
        background-color: var(--clr-50);

        transition: background-color $trans-fast ease;
    }

    body {
        // prevent zoom-in on iOS Safari as meta tags are ignored
        touch-action: pan-y;

        margin-top: env(safe-area-inset-top);
        margin-bottom: env(safe-area-inset-bottom);

        overflow-y: scroll;
    }
}

/* === COLOR SCHEME MIXINS ================ */
@mixin light {
    .button {
        // internal variables 
        --_clr: var(--clr-900);
        --_clr-background: var(--clr-100);
        --_clr-highlight: var(--clr-0);
        --_clr-border: var(--clr-300);

        &:hover, &:focus {
            --_clr: var(--clr-1000);
            --_clr-border: var(--clr-500);
        }

        &:focus-visible {
            --_clr: var(--clr-1000);
            --_clr-border: var(--clr-focus-red);
        }

        &:active, &.active {
            --_clr: var(--clr-1000);
            --_clr-background: var(--clr-0);
            --_clr-highlight: var(--clr-250);
            --_clr-border: var(--clr-600);
        }
    
        &:disabled, &.kbActive:disabled {
            --_clr: var(--clr-400);
            --_clr-background: var(--clr-100);
            --_clr-highlight: var(--clr-100);
            --_clr-border: var(--clr-150);
        }

        &.kbActive {
            --_clr: var(--clr-1000);
            --_clr-background: var(--clr-active);
            --_clr-highlight: var(--clr-active-highlight);
            --_clr-border: var(--clr-600);
        }

        &.warn {
            // internal variables 
            --_clr: var(--clr-red);
    
            &:hover, &:focus {
                --_clr: var(--clr-red-hover);
            }

            &:focus-visible {
                --_clr: var(--clr-red-hover);
            }
        
            &:active, &.active {
                --_clr: var(--clr-red-hover);
            }
    
            &:disabled {
                --_clr: var(--clr-red-disabled);
            }

            &.kbActive {
                --_clr: var(--clr-1000);
            }
        }
    }

    .buttonInput:focus-visible + .button {
        --_clr: var(--clr-1000);
        --_clr-border: var(--clr-red);
    }
}

@mixin dark {
    .button {
        // internal variables 
        --_clr: var(--clr-900);
        --_clr-background: var(--clr-100);
        --_clr-highlight: var(--clr-150);
        --_clr-border: var(--clr-0);

        &:hover, &:focus {
            --_clr: var(--clr-1000);
            --_clr-border: var(--clr-0);
        }

        &:focus-visible {
            --_clr: var(--clr-1000);
            --_clr-border: var(--clr-focus-red);
        }
    
        &:active, &.active {
            --_clr: var(--clr-1000);
            --_clr-background: var(--clr-150);
            --_clr-highlight: var(--clr-50);
            --_clr-border: var(--clr-0);
        }
    
        &:disabled, &.kbActive:disabled {
            --_clr: var(--clr-400);
            --_clr-background: var(--clr-100);
            --_clr-highlight: var(--clr-100);
            --_clr-border: var(--clr-50);
        }

        &.kbActive {
            --_clr: var(--clr-1000);
            --_clr-background: var(--clr-active);
            --_clr-highlight: var(--clr-active-highlight);
            --_clr-border: var(--clr-0);
        }

        &.warn {
            // internal variables 
            --_clr: var(--clr-red);
    
            &:hover, &:focus {
                --_clr: var(--clr-red-hover);
            }

            &:focus-visible {
                --_clr: var(--clr-red-hover);
            }
        
            &:active, &.active {
                --_clr: var(--clr-red-hover);
            }
    
            &:disabled {
                --_clr: var(--clr-red-disabled);
            }

            &.kbActive {
                --_clr: var(--clr-1000);
            }
        }
    }

    .buttonInput:focus-visible + .button {
        --_clr: var(--clr-1000);
        --_clr-border: var(--clr-active-highlight);
    }
}

@include light;

.button {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;
    width: $button-minSize;
    height: $button-minSize;

    color: var(--_clr);
    background-color: var(--_clr-highlight);
    padding: 0;
    border: solid $border-width-thick var(--_clr-border);
    border-radius: $borderRadius-round;

    cursor: pointer;
    transition: color $trans-fast ease,
                background-color $trans-fast ease,
                border-color $trans-fast ease;

    &::before {
        // main color
        content: "";
        position: absolute;
        top: $highlight-height;
        right: calc(0.5 * $highlight-height);
        bottom: 0;
        left: calc(0.5 * $highlight-height);
        z-index: -1;

        background-color: var(--_clr-background);
        border-radius: $borderRadius-round;
        transform: translateY(0);

        transition: background-color $trans-fast ease,
                    transform $trans-fast ease;
    }

    &:active, &.active {
        &::before {
            transform: translateY(-$highlight-height);
        }
    }

    &:disabled {
        cursor: not-allowed;
    }
}

.icon {
    display: block;
    width: $icon-size;
    height: $icon-size;
}

.visuallyHidden {
    position: absolute;
    white-space: nowrap;
    clip: rect(0 0 0 0);

    width: 1px;
    height: 1px;

    padding: 0;
    border: 0;
    margin: 0;

    overflow: hidden;
}

/* === COLOR SCHEME ======================= */
:global([data-colorScheme="dark"]) { @include dark; }

@media (prefers-color-scheme: dark) {
    @include dark;

    :global([data-colorScheme="light"]) {
        @include light;
    }
}